* Value
Value type is the most basic type, simply containing a value of type =T=.

** Options
- =initialState: T= :: Required value to initialize in Redux
- =equals?: (a: T, b: T) => boolean= :: Comparator to check if two values of type =T= are identical (default to triple equals)

** Actions
- =reset()= :: Reset value to initial state
- =set(newValue: T)= :: Change value to =newValue=

** Selectors
- =get(state: S): T= :: Extract possibly nested value from state =S=

** Example
#+BEGIN_SRC typescript
import {createStore} from 'redux'
import {Builders, Types} from 'redux-artificer'

const {actions, reducer, selectors} = Builders.build({
  id: Types.Value.New({initialState: 0}),
  section: Types.Value.New({initialState: 'home'}),
})

const store = createStore(reducer)
const id = selectors.id.get(store.getState())
const section = selectors.section.get(store.getState())
store.dispatch(actions.id.set(1))
store.dispatch(actions.section.set('about'))
#+END_SRC
