* Queue
Queue type contains a list of unique values of type =T=. Adding/removing items acts like a queue. (FIFO)

** Options
For more options see [[../list/README.org#options][list readme]]

** Actions
For more actions see [[../list/README.org#actions][list readme]]
- =pop(count: number = 1)= :: Remove a number of items off the head of the queue

** Selectors
For more selectors see [[../list/README.org#selectors][list readme]]
- =peek(state: S, count: number): T[]= :: View a number of items off the head of the queue
- =peekOne(state: S): T | undefined= :: View the top of the queue (=undefined= if empty)

** Example
#+BEGIN_SRC typescript
import {createStore} from 'redux'
import {Builders, Types} from 'redux-artificer'

const {actions, reducer, selectors} = Builders.build({
  set: Types.Set.New<number>(),
})

const store = createStore(reducer)
const contains = selectors.set.contains(store.getState(), 1)
store.dispatch(actions.set.insert(1))
store.dispatch(actions.set.remove([0, 1]))
#+END_SRC
